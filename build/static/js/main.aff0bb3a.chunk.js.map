{"version":3,"sources":["services/notes.js","components/note.js","components/notification.js","App.js","index.js"],"names":["services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Note","_ref","note","toggleImportance","label","important","React","createElement","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","_slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNotes","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNote","notesToShow","filter","map","key","find","n","changedNote","_objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Math","random","value","onChange","console","log","target","type","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.aff0bb3a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react';\n\nconst Note = ({note , toggleImportance}) => {\n  const label = note.important ? 'make not important':'make important'\n    return (\n      <li className='note'>\n        {note.content}\n        <button onClick= {toggleImportance}>{label}</button>\n      </li>\n    )\n  }\n\nexport default Note","import React from \"react\"\n\nconst Notification = ({message}) => {\n    if (message === null){\n        return null\n    }else {\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification","import { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from \"./components/note\"\nimport React from 'react';\nimport './index.css'\nimport Notification from './components/notification'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2022</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNotes] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNote => {\n        setNotes(initialNote)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() < 0.5\n    }\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNotes('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note , important: !note.important}\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from the server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      },5000)\n      setNotes(notes.filter(n =>n.id !== id))\n    })\n  }\n\n  const handleNewNote = (event) => {\n    console.log(event.target.value)\n    setNewNotes(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message = {errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll? 'important':'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n            key={note.id} \n            note = {note}\n            toggleImportance = {() => toggleImportanceOf(note.id) }\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value = {newNote}\n          onChange={handleNewNote}\n        />\n        <button type = \"submit\">save</button>\n      </form>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport App from './App'\n\nReactDOM.createRoot(document.getElementById('root')).render(<App/>)\n\n\n"],"sourceRoot":""}